{"version":3,"sources":["redux/reducers/user-auth/User.reducers.js","redux/reducers/contact-reducers/Contact.reducers.js","redux/rootReducer.js","redux/store.js","firebase/config.js","firebase/firebase.js","redux/actions/contact/Contact.actions.js","components/navigation/Navigation.component.jsx","components/spinner/spinner.jsx","components/add-contact/AddContact.component.jsx","components/contact-list/ContactList.component.jsx","App.js","redux/actions/user-auth/UserAuth.actions.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","user","UserReducer","state","action","type","payload","contacts","ContactReducer","combineReducers","contact","middleware","thunk","store","createStore","rootReducer","applyMiddleware","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","signInWithGoogle","provider","auth","GoogleAuthProvider","signInWithPopup","then","data","createCurrentUser","catch","error","console","log","a","firestore","doc","uid","userRef","get","exists","userData","name","displayName","email","set","addContactToFirestore","id","collection","dataRef","add","getAllContacts","contactsRef","collectionRef","arr","docs","map","push","getContacts","connect","dispatch","signOut","className","onClick","Spinner","size","style","width","height","React","useState","values","setValues","loading","setLoading","handleChange","e","target","value","handleSubmit","preventDefault","test","String","toLowerCase","onSubmit","htmlFor","onChange","placeholder","disabled","display","justifyContent","alignItems","sample","useEffect","length","index","key","styles","appInner","padding","side1","flex","side2","currentUser","onAuthStateChanged","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ad4a75b.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n    user: null\r\n}\r\n\r\nconst UserReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case \"SELECT_CURRENT_USER\": {\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default UserReducer;","const INITIAL_STATE ={\r\n    contacts: null\r\n}\r\n\r\nconst ContactReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case \"GET_CONTACTS\": {\r\n            return {\r\n                ...state,\r\n                contacts: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ContactReducer;","import {combineReducers} from 'redux';\r\n\r\nimport UserReducer from './reducers/user-auth/User.reducers';\r\nimport ContactReducer from './reducers/contact-reducers/Contact.reducers';\r\n\r\nexport default combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer\r\n})","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\nexport default store;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyDdiWcFzvhiQ_SB34Srd_ABfWK7o0Bl-k4\",\r\n    authDomain: \"contact-b70a1.firebaseapp.com\",\r\n    databaseURL: \"https://contact-b70a1.firebaseio.com\",\r\n    projectId: \"contact-b70a1\",\r\n    storageBucket: \"contact-b70a1.appspot.com\",\r\n    messagingSenderId: \"995257068640\",\r\n    appId: \"1:995257068640:web:5b1e13ff71bceeb9932705\",\r\n    measurementId: \"G-PC5NRYCD1D\"\r\n  };\r\n\r\n  export default firebaseConfig;","import firebase from 'firebase';\r\nimport firebaseConfig from './config';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// =========================================================================================================== //\r\n// =============================================== CODE HERE ================================================= //\r\n// =========================================================================================================== //\r\n\r\n/* GOOGLE SIGN IN */\r\n\r\n\r\nexport const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase.auth().signInWithPopup(provider)\r\n        .then(data => {\r\n            createCurrentUser(data);\r\n        })\r\n        .catch((error) => console.log(error))\r\n}\r\n\r\nexport const createCurrentUser = async (data) => {\r\n    if(!data) return;\r\n    const userRef = await firebase.firestore().doc(`users/${data.uid}`);\r\n    const userSnapShotData = await userRef.get();\r\n\r\n    if(!userSnapShotData.exists) {\r\n        const userData = {\r\n            name: data.user.displayName,\r\n            email: data.user.email\r\n        }\r\n        await userRef.set(userData)\r\n    }\r\n\r\n    return console.log(\"User is already exist !\")\r\n}\r\n\r\nexport const addContactToFirestore = async (id,data) => {\r\n    try {\r\n        const dataRef = await firebase.firestore().collection(`users/${id}/contacts/`);\r\n        const collection = await dataRef.get();\r\n        await dataRef.add(data)\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getAllContacts = async (id) => {\r\n    const contactsRef = await firebase.firestore().collection(`users/${id}/contacts`);\r\n    const collectionRef = await contactsRef.get();\r\n\r\n    const arr = [];\r\n\r\n    collectionRef.docs.map(async data => {\r\n        arr.push(data.data())\r\n    })\r\n\r\n    return await arr;\r\n}\r\n\r\nexport default firebase;","export const getContacts = action => ({\r\n    type: \"GET_CONTACTS\",\r\n    payload: action\r\n})\r\n","import React from 'react';\r\nimport { connect} from 'react-redux';\r\n\r\nimport {getContacts} from '../../redux/actions/contact/Contact.actions';\r\n\r\nimport firebase, {signInWithGoogle} from '../../firebase/firebase';\r\n\r\nimport './navigation.styles.scss';\r\n\r\nconst Navigation = ({user, getContacts}) => {\r\n\r\n    const signOut = async () => {\r\n        await firebase.auth().signOut();\r\n        getContacts(null)\r\n    }\r\n\r\n    return (\r\n        <nav id=\"nav\">\r\n            <div className=\"container\">\r\n                <div className=\"nav-inner\">\r\n                    <div className=\"nav-logo\">Save Contact App</div>\r\n                    {\r\n                        user ? \r\n                        (<button className=\"btn\" onClick={signOut}>SIGN OUT</button>)\r\n                         :\r\n                        (<button className=\"btn\" onClick={signInWithGoogle}>SIGN IN</button>)\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getContacts: data => dispatch(getContacts(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import React from 'react';\r\n\r\nimport './spinner.styles.scss';\r\n\r\nconst Spinner = ({size}) => {\r\n\r\n    return (\r\n        <div className=\"spinner\" style={{width: size ? `${size}px` : \"20px\", height: size ? `${size}px` : \"20px\"}}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {addContactToFirestore,getAllContacts} from '../../firebase/firebase';\r\nimport {getContacts} from '../../redux/actions/contact/Contact.actions';\r\n\r\nimport Spinner from '../spinner/spinner';\r\n\r\nimport './add-contact.styles.scss';\r\n\r\nconst AddContact = ({user, getContacts}) => {\r\n    const [values, setValues] = React.useState({\r\n        email: '',\r\n        name:'',\r\n        contact: ''\r\n    })\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setValues({...values, [name]: value})\r\n    }\r\n\r\n    const validateEmail = (email) => {\r\n        const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return pattern.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(validateEmail(values.email)) {\r\n            console.log(\"Email Validated\")\r\n        } else {\r\n            console.log(\"Invalid Email !\")\r\n            return;\r\n        }\r\n \r\n        if(values.name === \"\" || values.contact === \"\") {\r\n            return console.log(\"EMPTY FIELDS\")\r\n        }\r\n        setLoading(true)\r\n        await addContactToFirestore(user.uid, values)\r\n        const data = await getAllContacts(user.uid)\r\n        getContacts(data)\r\n        setValues({values, name: \"\", email: \"\", contact: \"\"})\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-contact\">\r\n            <div className=\"container-fluid\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"#email\">Email:</label>\r\n                        <input type=\"text\" onChange={handleChange} name=\"email\" id=\"email\" className=\"input-field\" placeholder=\"Enter Email ...\" value={values.email} disabled={user ? false : true}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"#name\">Name:</label>\r\n                        <input type=\"text\" onChange={handleChange} name=\"name\" id=\"name\" className=\"input-field\"  placeholder=\"Enter Name ...\" value={values.name} disabled={user ? false : true}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"#phone\">Contact:</label>\r\n                        <input type=\"text\" onChange={handleChange} name=\"contact\" id=\"contact\" className=\"input-field\" placeholder=\"Enter Contact ....\" value={values.contact} disabled={user ? false : true}/>\r\n                    </div>\r\n                    {\r\n                        loading ? \r\n                        (<button className=\"btn\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Spinner /> ADDING\r\n                    </button>) :\r\n                        (<button className=\"btn\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} type=\"submit\" disabled={user ? false : true}> ADD CONTACT</button>)\r\n                        \r\n                    }\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getContacts: data => dispatch(getContacts(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);","import React,{ useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getAllContacts} from '../../firebase/firebase';\r\n\r\nimport {getContacts} from '../../redux/actions/contact/Contact.actions';\r\n\r\nimport './contact-list.styles.scss';\r\n\r\nconst ContactList = ({user,contacts, getContacts}) => {\r\n\r\n    const sample = async() => {\r\n        if(user) {\r\n            const data = await getAllContacts(user.uid)\r\n            getContacts(data)\r\n            return data\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        sample()\r\n    }, [user])\r\n\r\n    return (\r\n        <div id=\"contact-list\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"contact-inner\">\r\n                    <div className=\"contact-headers\">\r\n                        <p className=\"headers headers-email\">Email</p>\r\n                        <p className=\"headers headers-name\">Name</p>\r\n                        <p className=\"headers headers-contact\">Contact</p>\r\n                    </div>\r\n                    {\r\n                        contacts && contacts.length > 0 ? \r\n                        contacts.map((value, index) => (\r\n                            <div className=\"contact-content\" key={index}>\r\n                                <p className=\"content content-email\">{value.email}</p>\r\n                                <p className=\"content content-name\">{value.name}</p>\r\n                                <p className=\"content content-contact\">{value.contact}</p>\r\n                            </div>\r\n                        ))\r\n                        : \r\n                        <div className=\"contact-content\">\r\n                            <p className=\"content\" style={{width: '100%'}}>NO CONTACTS ..</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user,\r\n    contacts: state.contact.contacts\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getContacts: (data) => dispatch(getContacts(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport firebase, {createCurrentUser} from './firebase/firebase';\nimport {currentUser} from './redux/actions/user-auth/UserAuth.actions';\n\nimport Navigation from './components/navigation/Navigation.component';\nimport AddContact from './components/add-contact/AddContact.component';\nimport ContactList from './components/contact-list/ContactList.component';\n\nimport './App.css';\n\nconst styles = {\n  appInner: {\n    display: 'flex',\n    padding: '40px 0px'\n  },\n  side1: {\n    flex: 1\n  },\n  side2: {\n    flex: 2\n  }\n}\n\nconst App = ({currentUser}) => {\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(async(user) => {\n      if(!user) currentUser(null);\n      currentUser(user)\n    })\n  })\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <div className=\"container\">\n        <div style={styles.appInner}>\n          <div style={styles.side1}>\n            <AddContact />\n          </div>\n          <div style={styles.side2}>\n            <ContactList />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.user.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n  currentUser: (user) => dispatch(currentUser(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import firebase from '../../../firebase/firebase';\r\n\r\nexport const currentUser = (action) => ({\r\n    type: \"SELECT_CURRENT_USER\",\r\n    payload: action\r\n})\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider} from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}