{"version":3,"sources":["redux/reducers/user-auth/User.reducers.js","redux/reducers/contact-reducers/Contact.reducers.js","redux/rootReducer.js","redux/store.js","firebase/config.js","firebase/firebase.js","redux/actions/contact/Contact.actions.js","components/navigation/Navigation.component.jsx","components/spinner/spinner.jsx","components/add-contact/AddContact.component.jsx","components/contact-list/ContactList.component.jsx","components/footer/Footer.jsx","components/modal/Modal.jsx","components/confirmation/deleteModal.jsx","App.js","redux/actions/user-auth/UserAuth.actions.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","user","UserReducer","state","action","type","payload","contacts","openModal","contactValue","openDeleteModal","contactId","ContactReducer","combineReducers","contact","middleware","thunk","store","createStore","rootReducer","applyMiddleware","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","signInWithGoogle","provider","auth","GoogleAuthProvider","signInWithPopup","then","data","createCurrentUser","catch","error","console","log","a","firestore","doc","uid","userRef","get","userSnapShotData","exists","userData","name","displayName","email","set","addContactToFirestore","id","collection","dataRef","collectionToAdd","createdAt","Date","add","getAllContacts","contactsRef","orderBy","collectionRef","arr","docs","map","push","updateContacts","userId","updateContactRef","update","deleteContacts","deleteContactRef","delete","getContacts","connect","dispatch","React","useState","setLoading","openOptions","setOpenOptions","signOut","className","src","photoURL","alt","onClick","Spinner","size","color","style","width","height","borderColor","useForm","register","handleSubmit","errors","reset","values","setValues","loading","handleChange","e","target","value","onSubmit","htmlFor","onChange","placeholder","disabled","ref","required","pattern","display","justifyContent","alignItems","selectOneContact","sample","useEffect","length","index","key","Footer","href","fontWeight","selectedValue","closeModal","item","setValue","preventDefault","toSubmit","Error","border","defaultValue","disable","toString","cursor","closeDeleteModal","deleteContact","styles","appInner","side1","flex","side2","isModal","modalValue","isDeleteModal","currentUser","onAuthStateChanged","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0338a310.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n    user: null\r\n}\r\n\r\nconst UserReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case \"SELECT_CURRENT_USER\": {\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default UserReducer;","const INITIAL_STATE ={\r\n    contacts: null,\r\n    openModal: false,\r\n    contactValue: null,\r\n    openDeleteModal: false,\r\n    contactId: null\r\n}\r\n\r\nconst ContactReducer = (state=INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case \"GET_CONTACTS\": {\r\n            return {\r\n                ...state,\r\n                contacts: action.payload\r\n            }\r\n        }\r\n        case \"UPDATE_CONTACTS\": {\r\n            return {\r\n                ...state,\r\n                contactValue: action.payload,\r\n                openModal: true\r\n            }\r\n        }\r\n        case \"CLOSE_MODAL\": {\r\n            return {\r\n                ...state,\r\n                openModal: false,\r\n                contactValue: null\r\n            }\r\n        }\r\n        case \"OPEN_DELETE_MODAL\": {\r\n            return {  \r\n                ...state,\r\n                openDeleteModal: true,\r\n                contactId: action.payload\r\n             }\r\n        }\r\n        case \"CLOSE_DELETE_MODAL\": {\r\n            return {  \r\n                ...state,\r\n                openDeleteModal: false\r\n             }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ContactReducer;","import {combineReducers} from 'redux';\r\n\r\nimport UserReducer from './reducers/user-auth/User.reducers';\r\nimport ContactReducer from './reducers/contact-reducers/Contact.reducers';\r\n\r\nexport default combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer\r\n})","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\nexport default store;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyDdiWcFzvhiQ_SB34Srd_ABfWK7o0Bl-k4\",\r\n    authDomain: \"contact-b70a1.firebaseapp.com\",\r\n    databaseURL: \"https://contact-b70a1.firebaseio.com\",\r\n    projectId: \"contact-b70a1\",\r\n    storageBucket: \"contact-b70a1.appspot.com\",\r\n    messagingSenderId: \"995257068640\",\r\n    appId: \"1:995257068640:web:5b1e13ff71bceeb9932705\",\r\n    measurementId: \"G-PC5NRYCD1D\"\r\n  };\r\n\r\n  export default firebaseConfig;","import firebase from 'firebase';\r\nimport firebaseConfig from './config';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// =========================================================================================================== //\r\n// =============================================== CODE HERE ================================================= //\r\n// =========================================================================================================== //\r\n\r\n// =========================================================================================================== //\r\n// =================================== GOOGLE SIGN IN========================================================= //\r\n// =========================================================================================================== //\r\nexport const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase.auth().signInWithPopup(provider)\r\n        .then(data => {\r\n            createCurrentUser(data);\r\n        })\r\n        .catch((error) => console.log(error))\r\n}\r\n\r\n// =========================================================================================================== //\r\n// ======================================= CHECK IF USER EXISTS ============================================== //\r\n// =========================================================================================================== //\r\n\r\nexport const createCurrentUser = async (data) => {\r\n    if(!data) return;\r\n\r\n    const userRef = await firebase.firestore().doc(`users/${data.user.uid}`);\r\n    const userSnapShotData = await userRef.get();\r\n    console.log(userSnapShotData)\r\n    if(!userSnapShotData.exists) {\r\n        const userData = {\r\n            name: data.user.displayName,\r\n            email: data.user.email\r\n        }\r\n        await userRef.set(userData)\r\n    }\r\n\r\n    return;\r\n}\r\n\r\n// =========================================================================================================== //\r\n// ====================================== ADD CONTACT TO STORE =============================================== //\r\n// =========================================================================================================== //\r\n\r\nexport const addContactToFirestore = async (id,data) => {\r\n    try {\r\n        const dataRef = await firebase.firestore().collection(`users/${id}/contacts/`);\r\n        const collection = await dataRef.get();\r\n        const collectionToAdd = {\r\n            createdAt: new Date(),\r\n            ...data\r\n        }\r\n        await dataRef.add(collectionToAdd)\r\n    } catch(e) {\r\n        \r\n    }\r\n}\r\n\r\n// =========================================================================================================== //\r\n// =============================== GET ALL CONTACTS ========================================================== //\r\n// =========================================================================================================== //\r\n\r\nexport const getAllContacts = async (id) => {\r\n    const contactsRef = await firebase.firestore().collection(`users/${id}/contacts`);\r\n    const collectionRef = await contactsRef.orderBy(\"createdAt\", \"desc\").get();\r\n    const arr = [];\r\n\r\n    collectionRef.docs.map(async data => {\r\n        const contact = {\r\n            id: data.id,\r\n            ...data.data()\r\n        }\r\n        arr.push(contact)\r\n    })\r\n\r\n    return await arr;\r\n}\r\n\r\n// =========================================================================================================== //\r\n// ========================================= UPDATE THE CONTACTS ============================================= //\r\n// =========================================================================================================== //\r\n\r\nexport const updateContacts = async (userId, contactId, data) => {\r\n    try {\r\n        const updateContactRef = await firebase.firestore().doc(`users/${userId}/contacts/${contactId}`);\r\n        await updateContactRef.update(data)\r\n    } catch(e) {\r\n        throw(e)\r\n    }\r\n}\r\n\r\n// =========================================================================================================== //\r\n// ========================================= DELETE CONTACTS ================================================= //\r\n// =========================================================================================================== //\r\n\r\nexport const deleteContacts = async (userId, contactId) => {\r\n    try {\r\n        const deleteContactRef = await firebase.firestore().doc(`users/${userId}/contacts/${contactId}`);\r\n        await deleteContactRef.delete()\r\n    } catch(e) {\r\n        throw(e)\r\n    }\r\n}\r\n\r\nexport default firebase;","export const getContacts = action => ({\r\n    type: \"GET_CONTACTS\",\r\n    payload: action\r\n})\r\n\r\nexport const selectOneContact = action => ({\r\n    type: \"UPDATE_CONTACTS\",\r\n    payload: action\r\n})\r\n\r\nexport const closeModal = () => ({\r\n    type: \"CLOSE_MODAL\"\r\n})\r\n\r\nexport const openDeleteModal = (id) => ({\r\n    type: \"OPEN_DELETE_MODAL\",\r\n    payload: id\r\n})\r\n\r\nexport const closeDeleteModal = () => ({\r\n    type: \"CLOSE_DELETE_MODAL\"\r\n})","import React from 'react';\r\nimport { connect} from 'react-redux';\r\n\r\nimport {getContacts} from '../../redux/actions/contact/Contact.actions';\r\nimport firebase, {signInWithGoogle} from '../../firebase/firebase';\r\n\r\nimport './navigation.styles.scss';\r\n\r\nconst Navigation = ({user, getContacts}) => {\r\n    console.log(user)\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [openOptions, setOpenOptions] = React.useState(false);\r\n\r\n    const signOut = async () => {\r\n        setLoading(true)\r\n        await firebase.auth().signOut();\r\n        setOpenOptions(false)\r\n        getContacts(null)\r\n        setLoading(false)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpenOptions(!openOptions)\r\n    }\r\n\r\n    return (\r\n        <nav id=\"nav\">\r\n            <div className=\"container\">\r\n                <div className=\"nav-inner\">\r\n                    <div className=\"nav-logo\">Contact App</div>\r\n                    {\r\n                        user ? \r\n                        (\r\n                            <div className=\"user-image-container\">\r\n                                <img src={user.photoURL} alt=\"image\" className=\"image\" onClick={handleClick}/>\r\n                                {\r\n                                    openOptions ? \r\n                                    (\r\n                                        <div className=\"user-data\">\r\n                                            <p className=\"sign-out\" onClick={signOut}>SIGN OUT</p>\r\n                                        </div>\r\n                                    ) : \r\n                                    null\r\n                                }\r\n                            </div>\r\n                        )\r\n                         :\r\n                        (<button className=\"btn\" onClick={signInWithGoogle}>SIGN IN</button>)\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getContacts: data => dispatch(getContacts(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import React from 'react';\r\n\r\nimport './spinner.styles.scss';\r\n\r\nconst Spinner = ({size, color}) => {\r\n\r\n    return (\r\n        <div className=\"spinner\" style={{width: size ? `${size}px` : \"20px\", height: size ? `${size}px` : \"20px\", borderColor:color ? `${color}` : '#ffecec'}}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport useForm from 'react-hook-form';\r\nimport {addContactToFirestore,getAllContacts} from '../../firebase/firebase';\r\nimport {getContacts} from '../../redux/actions/contact/Contact.actions';\r\n\r\nimport Spinner from '../spinner/spinner';\r\n\r\nimport './add-contact.styles.scss';\r\n\r\nconst AddContact = ({user, getContacts}) => {\r\n    const { register, handleSubmit,errors, reset} = useForm();\r\n    const [res, setRes] = React.useState(false);\r\n    const [values, setValues] = React.useState({\r\n        email: '',\r\n        name:'',\r\n        contact: ''\r\n    })\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setValues({...values, [name]: value})\r\n    }\r\n    const onSubmit = async (e) => {\r\n        setLoading(true)\r\n        await addContactToFirestore(user.uid, values)\r\n        const data = await getAllContacts(user.uid)\r\n        getContacts(data)\r\n        reset()\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-contact\">\r\n            <div className=\"container-fluid\">\r\n                <p className=\"contact-header\">Create Contact here... </p>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group\">\r\n                        {errors.email ? <label htmlFor=\"#email\">&#x2BBE;</label> : null}\r\n                        <input type=\"text\" onChange={handleChange} name=\"email\" id=\"email\" className=\"input-field\" placeholder=\"Enter Email ...\" disabled={user ? false : true} ref={register({\r\n                            required: true,\r\n                            pattern: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n                            })}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        {errors.name ? <label htmlFor=\"#name\">&#x2BBE;</label> : null}\r\n                        <input type=\"text\" onChange={handleChange} name=\"name\" id=\"name\" className=\"input-field\"  placeholder=\"Enter Name ...\" disabled={user ? false : true} ref={register({required: true})}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        {errors.contact ? <label htmlFor=\"#phone\">&#x2BBE;</label> :null}\r\n                        <input type=\"text\" onChange={handleChange} name=\"contact\" id=\"contact\" className=\"input-field\" placeholder=\"Enter Contact ....\" disabled={user ? false : true} ref={register({required: true})}/>\r\n                    </div>\r\n                    {\r\n                        loading ? \r\n                        (<button className=\"btn-contact\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Spinner size={15}/> ADDING...\r\n                    </button>) :\r\n                        (<button className=\"btn-contact\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} type=\"submit\" disabled={user ? false : true}> ADD CONTACT</button>)\r\n                        \r\n                    }\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getContacts: data => dispatch(getContacts(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);","import React,{ useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getAllContacts} from '../../firebase/firebase';\r\n\r\nimport {getContacts,selectOneContact, openDeleteModal} from '../../redux/actions/contact/Contact.actions';\r\nimport './contact-list.styles.scss';\r\n\r\nconst ContactList = ({user,contacts, getContacts, selectOneContact, openDeleteModal}) => {\r\n\r\n    const sample = async() => {\r\n        if(user) {\r\n            const data = await getAllContacts(user.uid)\r\n            getContacts(data)\r\n            return data\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        sample()\r\n    }, [user])\r\n\r\n    const selectData = (item) => {\r\n        console.log(item)\r\n        selectOneContact(item)\r\n    }\r\n\r\n    return (\r\n        <div id=\"contact-list\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"contact-inner\">\r\n                    <div className=\"contact-headers\">\r\n                        <p className=\"headers headers-email\">Email</p>\r\n                        <p className=\"headers headers-name\">Name</p>\r\n                        <p className=\"headers headers-contact\">Contact</p>\r\n                        <p className=\"headers headers-actions\">Actions</p>\r\n                    </div>\r\n                    {\r\n                        contacts && contacts.length > 0 ? \r\n                        contacts.map((value, index) => (\r\n                            <div className=\"contact-content\" key={index}>\r\n                                <p className=\"content content-email\">{value.email}</p>\r\n                                <p className=\"content content-name\">{value.name}</p>\r\n                                <p className=\"content content-contact\">{value.contact}</p>\r\n                                <p className=\"content content-actions\"><span className=\"action-icons\" onClick={() => selectOneContact(value)}>&#9998;</span> <span className=\"action-icons\" onClick={() => openDeleteModal(value.id)}>&#128465;</span></p>\r\n                            </div>\r\n                        ))\r\n                        : \r\n                        <div className=\"contact-content\">\r\n                            <p className=\"content\" style={{width: '100%'}}>NO CONTACTS ..</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user,\r\n    contacts: state.contact.contacts\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getContacts: (data) => dispatch(getContacts(data)),\r\n    selectOneContact: data => dispatch(selectOneContact(data)),\r\n    openDeleteModal: (id) => dispatch(openDeleteModal(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\n\r\nimport './footer.styles.scss';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer id=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"footer-inner\">\r\n                    Made by: <a href=\"https://www.facebook.com/wayandanyael\" target=\"_blank\" style={{color: \"white\", fontWeight: \"500\"}}> Wayan Danyael Eco</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport useForm from 'react-hook-form';\r\n\r\nimport {closeModal, getContacts} from '../../redux/actions/contact/Contact.actions';\r\nimport { updateContacts, getAllContacts } from '../../firebase/firebase';\r\n\r\nimport Spinner from '../spinner/spinner';\r\n\r\nimport './modal.styles.scss';\r\n\r\nconst Modal = ({selectedValue, dispatch,userId,getContacts, closeModal}) => {\r\n    const { register, handleSubmit,errors} = useForm();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [values, setValue] = React.useState({\r\n        email: selectedValue.email,\r\n        name: selectedValue.name,\r\n        contact: selectedValue.contact\r\n    })\r\n    \r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        setValue({ ...values, [name]: value})\r\n    }\r\n\r\n    const toSubmit = async (e) => {\r\n        try {\r\n            setLoading(true)\r\n            await updateContacts(userId,selectedValue.id, values);\r\n            const data = await getAllContacts(userId)\r\n            getContacts(data)\r\n            setLoading(false)\r\n            closeModal();\r\n        } catch(e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"modal\">\r\n            <div className=\"modal-inner\">\r\n                <div className=\"modal-box\">\r\n                    <div className=\"modal-title\">UPDATE CONTACT</div>\r\n                    <div className=\"modal-content\">\r\n                        <form onSubmit={handleSubmit(toSubmit)}>\r\n                            <div className=\"form-group\">\r\n                                {errors.email ? <label htmlFor=\"#email\">&#x2BBE;</label> : null}\r\n                                <input type=\"text\" name=\"email\" onChange={handleChange} id=\"email\" style={{border: errors.email ? \"1px solid red\" : null}} className=\"input-field\" placeholder=\"Enter Email ...\" defaultValue={selectedValue.email} ref={register({\r\n                                    required: true,\r\n                                    pattern: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n                                    })}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {errors.name ? <label htmlFor=\"#email\">&#x2BBE;</label> : null}\r\n                                <input type=\"text\" name=\"name\" style={{border: errors.name ? \"1px solid red\" : null}} onChange={handleChange} id=\"name\" className=\"input-field\"  placeholder=\"Enter Name ...\" defaultValue={selectedValue.name} ref={register({required: true})}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {errors.contact ? <label htmlFor=\"#email\">&#x2BBE;</label> : null}\r\n                                <input type=\"text\" name=\"contact\" style={{border: errors.contact ? \"1px solid red\" : null}} onChange={handleChange} id=\"contact\" className=\"input-field\" placeholder=\"Enter Contact ....\" defaultValue={selectedValue.contact} ref={register({required: true})}/>\r\n                            </div> \r\n                            <div className=\"modal-actions\">\r\n                                <button className=\"modal-btn-actions\" type=\"btn\" onClick={() => closeModal()}>CANCEL</button>\r\n                                <button className=\"modal-btn-actions\" type=\"submit\" disable={loading.toString()} style={{cursor: loading ? \"progress\" : \"pointer\"}}>{loading ? <Spinner size={15} /> : null} UPDATE</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userId: state.user.user.uid,\r\n    selectedValue: state.contact.contactValue\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeModal: () => dispatch(closeModal()),\r\n    getContacts: item => dispatch(getContacts(item)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);","import React from 'react'; \r\nimport { connect } from 'react-redux'; \r\n\r\nimport Spinner from '../spinner/spinner';\r\n\r\nimport { closeDeleteModal,getContacts } from '../../redux/actions/contact/Contact.actions';\r\nimport {deleteContacts,getAllContacts} from '../../firebase/firebase';\r\n\r\nimport './delete.styles.scss';\r\n\r\nconst ConfirmDelete = ({getContacts, userId, closeDeleteModal, contactId}) => {\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const deleteContact = async () => {\r\n        setLoading(true);\r\n        await deleteContacts(userId, contactId);\r\n        const data = await getAllContacts(userId);\r\n        getContacts(data)\r\n        closeDeleteModal();\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div id=\"delete\">\r\n            <div className=\"delete-inner\">\r\n                <div className=\"delete-box\">\r\n                    <div className=\"delete-title\">\r\n                        Delete Confirmation\r\n                    </div>\r\n                    <div className=\"delete-content\">\r\n                        Are you sure to delete ?\r\n                    </div>\r\n                    <div className=\"delete-actions\">\r\n                        <button className=\"delete-btn\" onClick={() => closeDeleteModal()}>Cancel</button>\r\n                        <button className=\"delete-btn\" onClick={deleteContact}>{loading ? <Spinner size={15} color=\"#3c4245\"/> : null}Yes</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userId: state.user.user.uid,\r\n    contactId: state.contact.contactId\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getContacts: value => dispatch(getContacts(value)),\r\n    closeDeleteModal: () => dispatch(closeDeleteModal())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmDelete);","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport firebase, {createCurrentUser} from './firebase/firebase';\nimport {currentUser} from './redux/actions/user-auth/UserAuth.actions';\n\nimport Navigation from './components/navigation/Navigation.component';\nimport AddContact from './components/add-contact/AddContact.component';\nimport ContactList from './components/contact-list/ContactList.component';\nimport Footer from './components/footer/Footer';\nimport Modal from './components/modal/Modal';\nimport ConfirmDelete from './components/confirmation/deleteModal';\n\nimport './App.css';\n\nconst styles = {\n  appInner: {\n    display: 'flex',\n  },\n  side1: {\n    flex: 1\n  },\n  side2: {\n    flex: 2\n  }\n}\n\nconst App = ({currentUser, isModal, isDeleteModal}) => {\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(async(user) => {\n      if(!user) currentUser(null);\n      currentUser(user)\n    })\n  })\n\n  return (\n    <div className=\"App\">\n      {isModal ? < Modal /> : null}\n      {isDeleteModal ? <ConfirmDelete /> : null}\n      <Navigation />\n      <div className=\"app-container\">\n        <div style={styles.appInner} className=\"app-inner\">\n          <div style={styles.side1} className=\"app-side-1\">\n            <AddContact />\n          </div>\n          <div style={styles.side2} className=\"app-side-2\">\n            <ContactList />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.user.user,\n  isModal: state.contact.openModal,\n  modalValue: state.contact.contactValue,\n  isDeleteModal: state.contact.openDeleteModal\n})\n\nconst mapDispatchToProps = dispatch => ({\n  currentUser: (user) => dispatch(currentUser(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import firebase from '../../../firebase/firebase';\r\n\r\nexport const currentUser = (action) => ({\r\n    type: \"SELECT_CURRENT_USER\",\r\n    payload: action\r\n})\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider} from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}